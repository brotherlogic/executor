// Code generated by protoc-gen-go. DO NOT EDIT.
// source: executor.proto

package executor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Command struct {
	Binary               string   `protobuf:"bytes,1,opt,name=binary,proto3" json:"binary,omitempty"`
	Parameters           []string `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{0}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetBinary() string {
	if m != nil {
		return m.Binary
	}
	return ""
}

func (m *Command) GetParameters() []string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type ExecuteRequest struct {
	Command              *Command `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteRequest) Reset()         { *m = ExecuteRequest{} }
func (m *ExecuteRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteRequest) ProtoMessage()    {}
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{1}
}

func (m *ExecuteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteRequest.Unmarshal(m, b)
}
func (m *ExecuteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteRequest.Marshal(b, m, deterministic)
}
func (m *ExecuteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteRequest.Merge(m, src)
}
func (m *ExecuteRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteRequest.Size(m)
}
func (m *ExecuteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteRequest proto.InternalMessageInfo

func (m *ExecuteRequest) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

type ExecuteResponse struct {
	TimeTakenInMillis    int64    `protobuf:"varint,1,opt,name=time_taken_in_millis,json=timeTakenInMillis,proto3" json:"time_taken_in_millis,omitempty"`
	CommandOutput        string   `protobuf:"bytes,2,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteResponse) Reset()         { *m = ExecuteResponse{} }
func (m *ExecuteResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteResponse) ProtoMessage()    {}
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_12d1cdcda51e000f, []int{2}
}

func (m *ExecuteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteResponse.Unmarshal(m, b)
}
func (m *ExecuteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteResponse.Marshal(b, m, deterministic)
}
func (m *ExecuteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteResponse.Merge(m, src)
}
func (m *ExecuteResponse) XXX_Size() int {
	return xxx_messageInfo_ExecuteResponse.Size(m)
}
func (m *ExecuteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteResponse proto.InternalMessageInfo

func (m *ExecuteResponse) GetTimeTakenInMillis() int64 {
	if m != nil {
		return m.TimeTakenInMillis
	}
	return 0
}

func (m *ExecuteResponse) GetCommandOutput() string {
	if m != nil {
		return m.CommandOutput
	}
	return ""
}

func init() {
	proto.RegisterType((*Command)(nil), "executor.Command")
	proto.RegisterType((*ExecuteRequest)(nil), "executor.ExecuteRequest")
	proto.RegisterType((*ExecuteResponse)(nil), "executor.ExecuteResponse")
}

func init() { proto.RegisterFile("executor.proto", fileDescriptor_12d1cdcda51e000f) }

var fileDescriptor_12d1cdcda51e000f = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0x6d, 0x0b, 0x5d, 0x3b, 0xc5, 0x95, 0x0e, 0x22, 0xab, 0x07, 0x29, 0x0b, 0x42, 0x41,
	0xa8, 0x50, 0xcf, 0x82, 0x22, 0x1e, 0x3c, 0x48, 0x21, 0x0a, 0x1e, 0x97, 0x74, 0x9d, 0x43, 0xb0,
	0xf9, 0x63, 0x32, 0x11, 0xfd, 0xf6, 0xd2, 0x34, 0x5d, 0x15, 0x3c, 0xce, 0x7b, 0xc9, 0x6f, 0xde,
	0x1b, 0x28, 0xe9, 0x93, 0xda, 0xc8, 0xd6, 0xcf, 0x9d, 0xb7, 0x6c, 0x71, 0x7f, 0x37, 0xd7, 0xb7,
	0x50, 0xdc, 0x59, 0xad, 0xa5, 0x79, 0xc5, 0x63, 0x18, 0xae, 0x94, 0x91, 0xfe, 0xab, 0xea, 0x4d,
	0x7b, 0xb3, 0x91, 0xc8, 0x13, 0x9e, 0x01, 0x38, 0xe9, 0xa5, 0x26, 0x26, 0x1f, 0xaa, 0xfe, 0x74,
	0x30, 0x1b, 0x89, 0x5f, 0x4a, 0x7d, 0x0d, 0xe5, 0x7d, 0xc2, 0x91, 0xa0, 0xf7, 0x48, 0x81, 0xf1,
	0x02, 0x8a, 0x76, 0x0b, 0x4d, 0xa8, 0xf1, 0x62, 0x32, 0xef, 0x02, 0xe4, 0x6d, 0x62, 0xf7, 0xa2,
	0x56, 0x70, 0xd8, 0x7d, 0x0f, 0xce, 0x9a, 0x40, 0x78, 0x09, 0x47, 0xac, 0x34, 0x35, 0x2c, 0xdf,
	0xc8, 0x34, 0xca, 0x34, 0x5a, 0xad, 0xd7, 0x2a, 0x24, 0xd8, 0x40, 0x4c, 0x36, 0xde, 0xf3, 0xc6,
	0x7a, 0x30, 0x8f, 0xc9, 0xc0, 0x73, 0x28, 0x33, 0xae, 0xb1, 0x91, 0x5d, 0xe4, 0xaa, 0x9f, 0x2a,
	0x1c, 0x64, 0x75, 0x99, 0xc4, 0xc5, 0x12, 0xc6, 0x2f, 0xd2, 0xf0, 0x13, 0xf9, 0x0f, 0xd5, 0x12,
	0xde, 0x40, 0x91, 0x37, 0x63, 0xf5, 0x13, 0xf0, 0x6f, 0x97, 0xd3, 0x93, 0x7f, 0x9c, 0x6d, 0xcc,
	0x7a, 0x6f, 0x35, 0x4c, 0xe7, 0xbc, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xc8, 0xd6, 0x29, 0x0f,
	0x60, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WantServiceClient is the client API for WantService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WantServiceClient interface {
	Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (*ExecuteResponse, error)
}

type wantServiceClient struct {
	cc *grpc.ClientConn
}

func NewWantServiceClient(cc *grpc.ClientConn) WantServiceClient {
	return &wantServiceClient{cc}
}

func (c *wantServiceClient) Execute(ctx context.Context, in *ExecuteRequest, opts ...grpc.CallOption) (*ExecuteResponse, error) {
	out := new(ExecuteResponse)
	err := c.cc.Invoke(ctx, "/executor.WantService/Execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WantServiceServer is the server API for WantService service.
type WantServiceServer interface {
	Execute(context.Context, *ExecuteRequest) (*ExecuteResponse, error)
}

func RegisterWantServiceServer(s *grpc.Server, srv WantServiceServer) {
	s.RegisterService(&_WantService_serviceDesc, srv)
}

func _WantService_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WantServiceServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/executor.WantService/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WantServiceServer).Execute(ctx, req.(*ExecuteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WantService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "executor.WantService",
	HandlerType: (*WantServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _WantService_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "executor.proto",
}
